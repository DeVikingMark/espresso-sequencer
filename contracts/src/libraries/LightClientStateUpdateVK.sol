// SPDX-License-Identifier: GPL-3.0-or-later
//
// Copyright (c) 2023 Espresso Systems (espressosys.com)
// This file is part of the Espresso Sequencer project.
//
// This program is free software: you can redistribute it and/or modify it under the terms of the
// GNU General Public License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
// even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
// You should have received a copy of the GNU General Public License along with this program. If
// not, see <https://www.gnu.org/licenses/>.

// NOTE: DO NOT MODIFY! GENERATED BY SCRIPT VIA `cargo run --bin gen-vk-contract --release`.
pragma solidity ^0.8.0;

import { IPlonkVerifier } from "../interfaces/IPlonkVerifier.sol";

/* solhint-disable no-inline-assembly */

library LightClientStateUpdateVK {
    function getVk() internal pure returns (IPlonkVerifier.VerifyingKey memory vk) {
        assembly {
            // domain size
            mstore(vk, 1048576)
            // num of public inputs
            mstore(add(vk, 0x20), 4)

            // sigma0
            mstore(
                mload(add(vk, 0x40)),
                16998694615579553089155874235793867672199587172454671092177469580512964996958
            )
            mstore(
                add(mload(add(vk, 0x40)), 0x20),
                14913826609548226082638726512972809701476246236323364924963463506303833260496
            )
            // sigma1
            mstore(
                mload(add(vk, 0x60)),
                16011493707035639931534162117491453383106763751836815206648905058016608669414
            )
            mstore(
                add(mload(add(vk, 0x60)), 0x20),
                14388337539414483026957313358914935908135528975692221819766569817991107147509
            )
            // sigma2
            mstore(
                mload(add(vk, 0x80)),
                13703053324325359330807185043437520838180663451594181288098705061547972032806
            )
            mstore(
                add(mload(add(vk, 0x80)), 0x20),
                7918750352115682079617962789983677878433816245702145361769062720089763403276
            )
            // sigma3
            mstore(
                mload(add(vk, 0xa0)),
                13204842395853711359779501868742648845147496821494941512193666818383658538957
            )
            mstore(
                add(mload(add(vk, 0xa0)), 0x20),
                6288695024259467804863820352232692613451432067819650190625073863086458569747
            )
            // sigma4
            mstore(
                mload(add(vk, 0xc0)),
                14040324856970655299835654144202400654814421740434059377565899259781188799728
            )
            mstore(
                add(mload(add(vk, 0xc0)), 0x20),
                834927786053040465657288239208351618292029645055491714782381530747781592418
            )

            // q1
            mstore(
                mload(add(vk, 0xe0)),
                20544572990331653135731505780346223934798623123944840034213073023563475633800
            )
            mstore(
                add(mload(add(vk, 0xe0)), 0x20),
                7550911007406754226376516859815557397303730847970858309323990044427329644102
            )
            // q2
            mstore(
                mload(add(vk, 0x100)),
                18956139365826315484332454907058381265609921251964078522092401394457299997830
            )
            mstore(
                add(mload(add(vk, 0x100)), 0x20),
                9788587892818848699376557857403480861962950394272020572265563326270836160853
            )
            // q3
            mstore(
                mload(add(vk, 0x120)),
                14944087736485927361587552840560835650155434953441391165695836700062143169913
            )
            mstore(
                add(mload(add(vk, 0x120)), 0x20),
                12259474077603385628738286132424764984742349966390776825596861993344622164294
            )
            // q4
            mstore(
                mload(add(vk, 0x140)),
                12197100474889712366030113889288384374271280568148734018082366471981780315735
            )
            mstore(
                add(mload(add(vk, 0x140)), 0x20),
                13924717995877468902081617840526261717992163369146998334077705192817969100151
            )

            // qM12
            mstore(
                mload(add(vk, 0x160)),
                4761744642254166165214745077362540222932129018196121566475099635847171238660
            )
            mstore(
                add(mload(add(vk, 0x160)), 0x20),
                6160449879339783698137050851589287422912864722866490311805770855855163898265
            )
            // qM34
            mstore(
                mload(add(vk, 0x180)),
                16019000954689754674593063440664003812452865678864153761623503615040839458731
            )
            mstore(
                add(mload(add(vk, 0x180)), 0x20),
                17381929236650272454670090686309297525519442421631348854786802259803071993361
            )

            // qO
            mstore(
                mload(add(vk, 0x1a0)),
                20775553829796351538875640647761226289796822451382188824751919155603475031120
            )
            mstore(
                add(mload(add(vk, 0x1a0)), 0x20),
                16387305174440748744164810428371325931833493744277542543307443448742579568958
            )
            // qC
            mstore(
                mload(add(vk, 0x1c0)),
                10561189404881783228238637998299055616027595156938649247416787347069381768829
            )
            mstore(
                add(mload(add(vk, 0x1c0)), 0x20),
                3943406444165977440881486577514784600711380627384453436931443980733458339721
            )
            // qH1
            mstore(
                mload(add(vk, 0x1e0)),
                4889516819694721837358304784193252947490111520088045204520047536170849858888
            )
            mstore(
                add(mload(add(vk, 0x1e0)), 0x20),
                4852876225040588964292323378399805668815216441959750201604927324046694192208
            )
            // qH2
            mstore(
                mload(add(vk, 0x200)),
                5795241947074845452142105074293485315890012937126510399092193478110678425250
            )
            mstore(
                add(mload(add(vk, 0x200)), 0x20),
                21134337090425282422832414599718123763071137889703540520295427274384203705493
            )
            // qH3
            mstore(
                mload(add(vk, 0x220)),
                6606186238266267238550749463315925213609734249860657171964295777390082553197
            )
            mstore(
                add(mload(add(vk, 0x220)), 0x20),
                2813969982045804558958174990765446958943095294464107506708510616571612999661
            )
            // qH4
            mstore(
                mload(add(vk, 0x240)),
                7594747784798376376858886229708671341141985648424878807573224827438208330262
            )
            mstore(
                add(mload(add(vk, 0x240)), 0x20),
                6835212894886893695211938895795741650252589108614387458070592221374863976851
            )
            // qEcc
            mstore(
                mload(add(vk, 0x260)),
                18418591436859210472987001470790664263135421335281477510498260703209065940337
            )
            mstore(
                add(mload(add(vk, 0x260)), 0x20),
                9993635555108627048825987579258725039654497454015072112166907062603793732862
            )
            // g2LSB
            mstore(
                add(vk, 0x280), 0xb0838893ec1f237e8b07323b0744599f4e97b598b3b589bcc2bc37b8d5c41801
            )
            // g2MSB
            mstore(
                add(vk, 0x2A0), 0xc18393c0fa30fe4e8b038e357ad851eae8de9107584effe7c7f1f651b2010e26
            )
        }
    }
}
